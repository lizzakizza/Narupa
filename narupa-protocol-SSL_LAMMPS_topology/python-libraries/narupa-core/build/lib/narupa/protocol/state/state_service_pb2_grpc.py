# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from narupa.protocol.state import state_service_pb2 as narupa_dot_protocol_dot_state_dot_state__service__pb2


class StateStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SubscribeStateUpdates = channel.unary_stream(
                '/narupa.protocol.state.State/SubscribeStateUpdates',
                request_serializer=narupa_dot_protocol_dot_state_dot_state__service__pb2.SubscribeStateUpdatesRequest.SerializeToString,
                response_deserializer=narupa_dot_protocol_dot_state_dot_state__service__pb2.StateUpdate.FromString,
                )
        self.UpdateState = channel.unary_unary(
                '/narupa.protocol.state.State/UpdateState',
                request_serializer=narupa_dot_protocol_dot_state_dot_state__service__pb2.UpdateStateRequest.SerializeToString,
                response_deserializer=narupa_dot_protocol_dot_state_dot_state__service__pb2.UpdateStateResponse.FromString,
                )
        self.UpdateLocks = channel.unary_unary(
                '/narupa.protocol.state.State/UpdateLocks',
                request_serializer=narupa_dot_protocol_dot_state_dot_state__service__pb2.UpdateLocksRequest.SerializeToString,
                response_deserializer=narupa_dot_protocol_dot_state_dot_state__service__pb2.UpdateLocksResponse.FromString,
                )


class StateServicer(object):
    """Missing associated documentation comment in .proto file."""

    def SubscribeStateUpdates(self, request, context):
        """Periodically received aggregated updates from last known state to latest
        state of a shared key/value store.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateState(self, request, context):
        """Attempt to make an update to the shared key/value store.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateLocks(self, request, context):
        """Attempt to acquire, renew, or release exclusive control of keys in the
        shared key/value store.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_StateServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'SubscribeStateUpdates': grpc.unary_stream_rpc_method_handler(
                    servicer.SubscribeStateUpdates,
                    request_deserializer=narupa_dot_protocol_dot_state_dot_state__service__pb2.SubscribeStateUpdatesRequest.FromString,
                    response_serializer=narupa_dot_protocol_dot_state_dot_state__service__pb2.StateUpdate.SerializeToString,
            ),
            'UpdateState': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateState,
                    request_deserializer=narupa_dot_protocol_dot_state_dot_state__service__pb2.UpdateStateRequest.FromString,
                    response_serializer=narupa_dot_protocol_dot_state_dot_state__service__pb2.UpdateStateResponse.SerializeToString,
            ),
            'UpdateLocks': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateLocks,
                    request_deserializer=narupa_dot_protocol_dot_state_dot_state__service__pb2.UpdateLocksRequest.FromString,
                    response_serializer=narupa_dot_protocol_dot_state_dot_state__service__pb2.UpdateLocksResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'narupa.protocol.state.State', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class State(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def SubscribeStateUpdates(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/narupa.protocol.state.State/SubscribeStateUpdates',
            narupa_dot_protocol_dot_state_dot_state__service__pb2.SubscribeStateUpdatesRequest.SerializeToString,
            narupa_dot_protocol_dot_state_dot_state__service__pb2.StateUpdate.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateState(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/narupa.protocol.state.State/UpdateState',
            narupa_dot_protocol_dot_state_dot_state__service__pb2.UpdateStateRequest.SerializeToString,
            narupa_dot_protocol_dot_state_dot_state__service__pb2.UpdateStateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateLocks(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/narupa.protocol.state.State/UpdateLocks',
            narupa_dot_protocol_dot_state_dot_state__service__pb2.UpdateLocksRequest.SerializeToString,
            narupa_dot_protocol_dot_state_dot_state__service__pb2.UpdateLocksResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
