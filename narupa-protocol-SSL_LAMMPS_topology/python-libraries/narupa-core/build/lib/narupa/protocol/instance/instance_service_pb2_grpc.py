# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from narupa.protocol.instance import connect_to_trajectory_pb2 as narupa_dot_protocol_dot_instance_dot_connect__to__trajectory__pb2
from narupa.protocol.instance import instance_service_pb2 as narupa_dot_protocol_dot_instance_dot_instance__service__pb2


class InstanceServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.LoadTrajectory = channel.unary_unary(
                '/narupa.protocol.instance.InstanceService/LoadTrajectory',
                request_serializer=narupa_dot_protocol_dot_instance_dot_instance__service__pb2.LoadTrajectoryRequest.SerializeToString,
                response_deserializer=narupa_dot_protocol_dot_instance_dot_instance__service__pb2.LoadTrajectoryResponse.FromString,
                )
        self.ConnectToTrajectory = channel.unary_unary(
                '/narupa.protocol.instance.InstanceService/ConnectToTrajectory',
                request_serializer=narupa_dot_protocol_dot_instance_dot_connect__to__trajectory__pb2.ConnectToTrajectoryRequest.SerializeToString,
                response_deserializer=narupa_dot_protocol_dot_instance_dot_connect__to__trajectory__pb2.ConnectToTrajectoryResponse.FromString,
                )
        self.GetInstanceInfo = channel.unary_unary(
                '/narupa.protocol.instance.InstanceService/GetInstanceInfo',
                request_serializer=narupa_dot_protocol_dot_instance_dot_instance__service__pb2.GetInstanceInfoRequest.SerializeToString,
                response_deserializer=narupa_dot_protocol_dot_instance_dot_instance__service__pb2.GetInstanceInfoResponse.FromString,
                )
        self.CloseInstance = channel.unary_unary(
                '/narupa.protocol.instance.InstanceService/CloseInstance',
                request_serializer=narupa_dot_protocol_dot_instance_dot_instance__service__pb2.CloseInstanceRequest.SerializeToString,
                response_deserializer=narupa_dot_protocol_dot_instance_dot_instance__service__pb2.CloseInstanceResponse.FromString,
                )


class InstanceServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def LoadTrajectory(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ConnectToTrajectory(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetInstanceInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CloseInstance(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_InstanceServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'LoadTrajectory': grpc.unary_unary_rpc_method_handler(
                    servicer.LoadTrajectory,
                    request_deserializer=narupa_dot_protocol_dot_instance_dot_instance__service__pb2.LoadTrajectoryRequest.FromString,
                    response_serializer=narupa_dot_protocol_dot_instance_dot_instance__service__pb2.LoadTrajectoryResponse.SerializeToString,
            ),
            'ConnectToTrajectory': grpc.unary_unary_rpc_method_handler(
                    servicer.ConnectToTrajectory,
                    request_deserializer=narupa_dot_protocol_dot_instance_dot_connect__to__trajectory__pb2.ConnectToTrajectoryRequest.FromString,
                    response_serializer=narupa_dot_protocol_dot_instance_dot_connect__to__trajectory__pb2.ConnectToTrajectoryResponse.SerializeToString,
            ),
            'GetInstanceInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.GetInstanceInfo,
                    request_deserializer=narupa_dot_protocol_dot_instance_dot_instance__service__pb2.GetInstanceInfoRequest.FromString,
                    response_serializer=narupa_dot_protocol_dot_instance_dot_instance__service__pb2.GetInstanceInfoResponse.SerializeToString,
            ),
            'CloseInstance': grpc.unary_unary_rpc_method_handler(
                    servicer.CloseInstance,
                    request_deserializer=narupa_dot_protocol_dot_instance_dot_instance__service__pb2.CloseInstanceRequest.FromString,
                    response_serializer=narupa_dot_protocol_dot_instance_dot_instance__service__pb2.CloseInstanceResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'narupa.protocol.instance.InstanceService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class InstanceService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def LoadTrajectory(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/narupa.protocol.instance.InstanceService/LoadTrajectory',
            narupa_dot_protocol_dot_instance_dot_instance__service__pb2.LoadTrajectoryRequest.SerializeToString,
            narupa_dot_protocol_dot_instance_dot_instance__service__pb2.LoadTrajectoryResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ConnectToTrajectory(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/narupa.protocol.instance.InstanceService/ConnectToTrajectory',
            narupa_dot_protocol_dot_instance_dot_connect__to__trajectory__pb2.ConnectToTrajectoryRequest.SerializeToString,
            narupa_dot_protocol_dot_instance_dot_connect__to__trajectory__pb2.ConnectToTrajectoryResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetInstanceInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/narupa.protocol.instance.InstanceService/GetInstanceInfo',
            narupa_dot_protocol_dot_instance_dot_instance__service__pb2.GetInstanceInfoRequest.SerializeToString,
            narupa_dot_protocol_dot_instance_dot_instance__service__pb2.GetInstanceInfoResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CloseInstance(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/narupa.protocol.instance.InstanceService/CloseInstance',
            narupa_dot_protocol_dot_instance_dot_instance__service__pb2.CloseInstanceRequest.SerializeToString,
            narupa_dot_protocol_dot_instance_dot_instance__service__pb2.CloseInstanceResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
